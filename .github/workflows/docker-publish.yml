name: Publish Docker image

on:
  release:
    types: [published, edited]  
  push:
    branches: [ "main" ]   # or "master", or whatever branch you want
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - 'images/**'
      - 'tests/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write   # needed for GHCR

    steps:
      - name: Debug Variables
        run: |
            echo "github.event_name: ${{ github.event_name }}"
            echo "github.ref_name: ${{ github.ref_name }}"
            echo "github.actor: ${{ github.actor  }}"
            echo "github.repository_owner: ${{ github.repository_owner }}"
            echo "github.repository: ${{ github.repository }}"
      
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{version}},priority=1000
            type=ref,event=branch,enable={{is_not_default_branch}},priority=900
            type=sha,prefix=,format=long,priority=200
            type=raw,value=latest,enable={{is_default_branch}},priority=100
          
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: |
            type=gha
            type=gha,scope=main
          cache-to: type=gha,mode=max