name: Linters

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  linters:
    name: Run Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Debug GitHub Variables
        run: |
            echo "github.event_name: ${{ github.event_name }}"
            echo "github.ref_name: ${{ github.ref_name }}"
            echo "github.event.repository.default_branch: ${{ github.event.repository.default_branch }}"

      - name: Setup Python 3 (with caching)
        uses: actions/setup-python@v6
        id: setup-python
        with:
          python-version: 3.x
          cache: 'pip'
          cache-dependency-path: |
            requirements-lint.txt
            pyproject.toml

      - name: Install backend Python linting requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-lint.txt

      - name: Cache pre-commit and mypy
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pre-commit
            .mypy_cache
            .ruff_cache
          key: ${{ runner.os }}-lint-py${{ steps.setup-python.outputs.python-version || '3.x' }}-${{ hashFiles('**/requirements-lint.txt', '**/.pre-commit-config.yaml', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-lint-

      - name: Setup Node.js (for frontend linting)
        uses: actions/setup-node@v4
        with:
          node-version: '22.20.0' # LTS
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend
        run: |
          npm ci || npm install --no-audit --no-fund

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

      - name: Run mypy
        run: mypy "./backend/" --install-types --non-interactive --config-file pyproject.toml

      - uses: pre-commit-ci/lite-action@v1.1.0
        if: always()
